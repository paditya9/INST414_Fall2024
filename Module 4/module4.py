# -*- coding: utf-8 -*-
"""Module4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FKpiIZUrY0S1W_2gU7nQormlJjR--Kqt
"""

import pandas as pd

# Load dataset
df = pd.read_excel("Module1_Dataset.xlsx")  # replace with your dataset's path

# Check for missing values and handle them if any
df.dropna(inplace=True)

# Selecting relevant columns
df = df[['State', 'Value', 'Low CI', 'High CI']]
print(df)

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

df = pd.read_excel("/content/Module1_Dataset.xlsx")
df.dropna(inplace=True)

df = df[['State', 'Value', 'Low CI', 'High CI']]
# print("Initial Data Sample:")
# print(df.head())

inertia = []
inertia_range = range(1, 10)

for k in inertia_range:
    kmeans = KMeans(n_clusters=k)
    kmeans.fit(df[['Value', 'Low CI', 'High CI']])
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(8, 5))
plt.plot(inertia_range, inertia, marker = 'o')
plt.title('Elbow Method for Optimal k')
plt.xlabel('Number of Clusters (k)')
plt.ylabel('Inertia')
plt.show()

k_optimal = 3
kmeans = KMeans(n_clusters=k_optimal, random_state=42)
df['Cluster'] = kmeans.fit_predict(df[['Value', 'Low CI', 'High CI']])

print("Clustered Data Sample:")
print(df)

plt.figure(figsize=(8, 5))
for cluster in range(k_optimal):
    clustered_data = df[df['Cluster'] == cluster]
    plt.scatter(clustered_data['Value'], clustered_data['Low CI'], label=f'Cluster {cluster}')
plt.xlabel('Value')
plt.ylabel('Low CI')
plt.legend()
plt.title('Clusters Visualization')
plt.show()

plt.figure(figsize=(8, 5))
for cluster in range(k_optimal):
    clustered_data = df[df['Cluster'] == cluster]
    plt.scatter(clustered_data['Value'], clustered_data['High CI'], label=f'Cluster {cluster}')
plt.xlabel('Value')
plt.ylabel('High CI')
plt.legend()
plt.title('Clusters Visualization')
plt.show()